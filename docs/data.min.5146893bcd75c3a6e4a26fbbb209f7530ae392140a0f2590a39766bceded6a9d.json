[{"link":"/blog/posts/2025/0105/","text":"texteditor途中まで作った\tやったもの texteditor\nきっかけ texteditor のチュートリアルを go で書き換えるみたいな記事を読んだ 紹介されてたもの → Build Your Own Text Editor ざっと見た感じとてもよくできていたので年末年始でやることにした\tやったもの texteditor きっかけ texteditor のチュートリアルを go で書き換えるみたいな記事を読んだ 紹介されてたもの → Build Your Own Text Editor ざっと見た感じとてもよくできていたので年末年始でやることにした 進捗 5.a text editor まで search と syntax highlighting はこの期間では終わらなさそうだったので今後の土日でのんびりやる 学び・感想 とてもとても楽しかった 自分のプログラミングの原体験が C++でゲーム作るとかだったので、特にキー入力の部分とかは「こういうのやったやった」みたいなとても懐かしい気持ちになった 境界値とかその辺 自作 OS の本でも似たようなものを読んだ switch (key) { case ARROW_LEFT: if (E.cx != 0) { E.cx--; } else if (E.cy \u003e 0) { E.cy--; E.cx = E.row[E.cy].size; } break; case ARROW_RIGHT: if (row \u0026\u0026 E.cx \u003c row-\u003esize) { E.cx++; } else if (row \u0026\u0026 E.cx == row-\u003esize) { E.cy++; E.cx = 0; } break; case ARROW_UP: if (E.cy != 0) { E.cy--; } break; case ARROW_DOWN: if (E.cy \u003c E.numrows) { E.cy++; } break; } ゲームのリメイクを遊んでるような気分 当時のゲームの再現ではなく体験の再現 Tidy First? を実践できた 一章終わるごとに 1 つ整頓として充てていいというルールを自分で決めて、その中でリポジトリを少しずつ便利にしていった cpplint とか入れたり リリースノート つけてみたり これによってただのチュートリアル写経から、程よく自分のリポジトリ感を持ちながら育てることができたと思う だから go に書き換えるとか追加のハードルは課さなかった 設計と進め方が美しすぎる 1 ファイルの中でもセクション分けでここまで整理できるとは思わなかった まずハードコーディングで文字を読み込んで(=ただ表示して)、そのあとファイルを読み込むようにするみたいなステップもよかった あとはハッピーパス(普通の一文字の入力)を考えてから特殊ケース(enter とか delete )を考える部分とか Makefile を使っているが、tab 文字の描画で 1 ステップ挟むときに ./kilo Makefile ですぐ動作確認できるところとか、よくできてるなと思った わざわざ tab 文字のダミーファイルを作らなくていいところ 一気にそれっぽくなる瞬間一覧 自分の作ったファイルが表示できる 文字が入力できる カーソルが動く 次の行に進める 保存できる ステータスバーが表示される 行数とかファイル名が書いてあるところ 例によって図解で整理した エディタを使ってみて 当然だが、まだまだだねという感想になった コーディングするには syntax highlighting や auto indent がないとだいぶきつい VSCode や Vim がいかに良くできてるかを実感できた feature test macro や VT100のUser guide は普通に勉強になった こうやってターミナル系のアプリって作ってくのねという参考になった","title":"texteditor途中まで作った"},{"link":"/blog/posts/2024/0713/","text":"windowsの自動起動(スタートアップ)アプリに標準のクロックを入れたい\t背景 休日に ueli というランチャーアプリを入れて作業効率化を楽しんでいた 普段 windows で作業するとき、ポモドーロタイマーとして標準でついてる クロック アプリを使っていた このアプリをスタートアップアプリに登録するのが少し手こずったので備忘録\t背景 休日に ueli というランチャーアプリを入れて作業効率化を楽しんでいた 普段 windows で作業するとき、ポモドーロタイマーとして標準でついてる クロック アプリを使っていた このアプリをスタートアップアプリに登録するのが少し手こずったので備忘録 調査 サポートページ を確認 [ファイルの場所を開く] のオプションがない場合は、そのアプリを起動時に実行できないことを意味します。 そんなわけないので、いろいろ調べて無理やり登録した 一般的な方法 一般的なアプリ(: windows 標準ではないアプリ)をスタートアップアプリに登録する方法 https://atmarkit.itmedia.co.jp/ait/articles/2308/28/news025.html 要約 エクスプローラーを開いて shell:startup を打ち込む ユーザごとのスタートアップフォルダが開く ここに自動起動したいアプリのショートカットを入れることで、自動起動できるようになる 方針 クロックアプリの場所を頑張って見つける Everything という検索ツールを使う これは ueli をいじってるときに入れてた ショートカットを作る 上記のスタートアップフォルダにショートカットを移す 設定アプリで確認したのち、再起動して動作確認 詳細 クロックアプリの場所を頑張って見つける Everything を使って timer とか clock とかそれっぽい名前をいろいろ調べる ノイズが多くて大変 パスの中に WindowsApps が入ってるものを何とか発見 名前は Time.exe だった ショートカットを作る エクスプローラーのアドレスバーみたいなところに前の手順で調べたフルパスを張り付けるとそのディレクトリに飛べる 試しに起動してみるといつものクロックアプリが起動したのでビンゴ 右クリックしてショートカットを作成 一筋縄では作れないので、「その他のオプションを確認」から作った スタートアップフォルダにショートカットを移す ドラッグ\u0026ドロップで ok 設定アプリで確認したのち、再起動して動作確認 「スタートアップ アプリ」に該当のアプリがあることを確認 再起動！ ちゃんと起動することを確認！やったね～～～ 感想・学び 休日エンジニアとしていい感じの課題だった 自動起動アプリ自体は PC の起動を重くするので入れすぎに注意 こまめに棚卸すべき 今まで windows のフォルダ整理をサボっていたが、検索ツールの発達によって一瞬で目的のものが探せるようになったのも普通にハッピー","title":"windowsの自動起動(スタートアップ)アプリに標準のクロックを入れたい"},{"link":"/blog/posts/2024/0525/","text":"ゼロからのOS自作入門を読み終わった話\tやったこと ゼロからの OS 自作入門をようやく読み切った！！ https://amzn.asia/d/gRGFy2i きちんと差分のコードを読みながら手を動かしてやってたのでとてもかかった ちゃんとやり始めたのは去年の 8 月くらい、買ったのは 2021 年 4 月くらいにあった DMM の電子書籍セール ちゃんと積読を消化できた稀有な例\tやったこと ゼロからの OS 自作入門をようやく読み切った！！ https://amzn.asia/d/gRGFy2i きちんと差分のコードを読みながら手を動かしてやってたのでとてもかかった ちゃんとやり始めたのは去年の 8 月くらい、買ったのは 2021 年 4 月くらいにあった DMM の電子書籍セール ちゃんと積読を消化できた稀有な例 意識したこと 無理をしない 他の趣味でもなんでもそうだけど、自分にとっての適切な距離というものがある 時間を少しでも確保していれば遅くても進んでいくというのは 1 つ自信になった my ルール的には 1 ポモドーロ(自分は 20 分でやってる)を土日で 1 回こなせば ok ということにしていた 継続こそ最大の力 分からないときに立ち止まる 業務でも何回も体験したことだが、背景の概念から知らないときは理解に時間かかるのが当然というのを思い出した C++や C を読むのは久々だったが特に C++の文法が懐かしかった とはいえモチベ下がっても嫌なので立ち止まりすぎず、とりあえず次に進むこともあった 「ここは細かいアドレスを計算したり変換してるだけだな」ということが分かったら、いったん細かい挙動を追うより先に進んでいいということにした 自分の言葉でメモを取る 理解できてないときは概して自分の言葉で説明できていない 前の章とか時にはめっちゃ前の章をちゃんと理解してないと意味わからないみたいな部分が特にこういう本は頻出する システムコールが分からないとそもそもアプリを動かせなかったり ファイルシステムが分からないと読み込み・書き込みの処理を作れなかったり まあ最悪再度出てきたときに振り返って思い出せればいい気はするけどね 学んだこと・懐かしかったこと C++のゲーム制作 実は中高生の時に DirectX とか Siv3D とかでゲームを作っていたのを思い出した 左上と大きさ指定して四角形を描画するみたいなのが懐かしすぎて涙が出た ウィンドウの描画処理とかはその辺の経験まんまだったのですっと読めた C++自体も懐かしくて、この本の作者が「なんでここでラムダ関数を使うのか？」みたいなこともコラムで書いてくれるタイプだったのでそのあたりの理解も深まった 過去の OS 自作入門 まず文字を表示するだけのを簡単に作って、徐々にできることを増やしていく感じが懐かしかった あの時は完走できなかったはずなので、リベンジを果たした アセンブリ パタヘネを読んでいたので、C 言語の中ではアセンブリ経由で呼び出さなきゃいけない関数とかも何となくのイメージがついていた 細かいなんとかレジスタみたいなのは忘れていたので調べて思い出した ここはまあ仕事とかで使うわけではないので、忘れていることを分かっている状態であれば及第点だと思っている 結局 CPU はレジスタの値を読み込んで 1 行ずつ機械語を実行してるだけなんだよな、みたいなあたりの感覚を久々に思い出した PCI デバイスの入力 自作 PC をしたときに、「PCIe はどうする？」みたいな話が上がったときに全くついていけなかった 今は規格の名前だとわかっている スロットの種類とか数が選択肢だった記憶 実際にそれを使う側のコードを今回の本で触ったので、ハードウェアとソフトウェアの知識・経験がつながった瞬間だった OS っぽさとは何かを考えた アプリケーションの上でアプリケーションが動いていたら OS? これはランチャーっぽい ここでいうランチャーは文化祭でゲームを動かすためのゲーム(アプリケーション)みたいなもの ターミナルが描画できれば OS? OS っぽくはなってると思う 画像やテキストビューワが使えたら OS? これは実用性の観点 複数アプリが動くのもそれっぽい テセウスの船みたいな思考実験を思い出した 人生で比較的時間とお金を割いて、手を動かしたり理解してきた部分の伏線回収という感じがすごかった 知識がつながるのって楽しいね 展望など とはいえ 0 から OS を作れるかというと全然作れる気はしない 自分なりになぞっただけ でも趣味だしそれでいいかなーという気もする きっとこの経験も未来のどこかでつながるでしょ！くらいの軽い気持ちで次の技術書や作りたいものに手を出していきたいと思う","title":"ゼロからのOS自作入門を読み終わった話"},{"link":"/blog/posts/2024/0104/","text":"ラズパイを買って自宅サーバ入門した話\t背景 年末年始で暇だったので、ラズパイを買ってファイルサーバでも作ってみるか、と思って作り始めた。諸々で 2 日ほどかかった。\nhttps://amzn.to/3vvqlhK\t背景 年末年始で暇だったので、ラズパイを買ってファイルサーバでも作ってみるか、と思って作り始めた。諸々で 2 日ほどかかった。 https://amzn.to/3vvqlhK ちょうどたまたま家に使わなくなった以下のものがあったので、それを有効活用したいみたいな気持ちもあった。 200GB の microSD 元 switch の SD カード ゲームが入らなくなってきたので 512GB を買ったのでこれが退役した 2TB の HDD(Gdrive) https://amzn.to/3NVXlGn 元々は前の前の mac のバックアップ用途で買った SSD が 256GB だったのでバックアップから復活させると簡単に容量を食い潰してしまうため、結局使わなかった あとは icloud の容量が 200GB を超えそうだったので、自宅にバックアップ取れるならこれ以上プランを上げなくてもいいかな、みたいな気持ちがあった。 やったこと OSのインストール 普通の Recommended のやつを入れたら OMV6 が入らない(対応してない)と言われ、OMV6 を入れたら ssh ができなくなる、みたいな罠を踏んで 4 回くらい入れ直した。結局入れたのは Lite の方。 Debian12 系に当たるので巷の記事が微妙に古くて参考にならないものばかりだった。流れだけ参考にして公式ドキュメントを見るという王道に戻って解決。 OMV6のインストール(回避) 参考にしたもの: https://koh-sen.jp/blog/archives/12238 OMV6 を入れるところまではなんとか行ったものの、なんか動作が不安定で先に進めなくなったので回避。 別にファイルサーバが作れればいいので OMV6 にこだわる必要はなかった。 NextCloudのインストール 参考にしたもの: https://qiita.com/hiro2do/items/f8eed40acab713f20693 色々apt 経由で入れられないか試行錯誤している中で、調査してたら見つけた。snap という便利パッケージ管理ツール的なのが出ていて、それを使ったら一瞬で入った。すごい。 公式: https://snapcraft.io/docs 外付けHDD有効化 ↑のブログ参考に、mount 系のコマンドは別で調べてやったら入った。素晴らしいね。 df -h で自分の意図したものが出てきた時は軽く感動。普段仕事ではクラウド上の EC2 とかしか触ってないから。物理サーバは実感が湧くのでいいね。 外部公開とHTTPS(TODO) ↑のブログに言われるまま tailscale とか色々入れてたら、どうも証明書関連でうまく行ってないっぽく全世界に公開しそう(一瞬した)なった。一旦内部公開で止めることにした。別にそれでも要件は満たせるので。 NextCloudを写真のバックアップ先に設定 参考にしたもの: https://denor.jp/iphone%E3%81%A7%E6%92%AE%E5%BD%B1%E3%81%97%E3%81%9F%E5%86%99%E7%9C%9F%E3%82%84%E5%8B%95%E7%94%BB%E3%82%92nextcloud%E3%82%B5%E3%83%BC%E3%83%90%E3%81%B8%E8%87%AA%E5%8B%95%E3%82%A2%E3%83%83%E3%83%97 やるだけ。 ここまで 1 日目。この後監視入れて wiki サーバでも建ててみるかという気分になり、引き続きインストールをしていた。 mackerel導入 入れるのはやるだけ。カスタムメトリックのプラグインを導入するのが苦労した。やりたかったのはラズパイの CPU 温度の監視。 公式: https://mackerel.io/ja/docs/entry/advanced/custom-metrics 最終的に書いたもの [plugin.metrics.temp] command = [\"bash\", \"/home/xxx/temp.sh\"] 最初は command=\"/home/xxx/temp.sh\" と書いていた。これでも動いていてくれて良くない？と思ったがなぜかメトリクスが送られなかったので書き方を変えた。 ちゃんと discord にも通知するようにした✌️ mediawiki導入(回避) 公式: https://www.mediawiki.org/wiki/Manual:Running_MediaWiki_on_Debian_or_Ubuntu/ja これに沿って初回のセットアップページまでは進んだ。(そこにいくまでに apache2 に mod-php を入れてなくてただの php ファイルがそのまま表示されるみたいな罠を踏んだ。1 回休み。) ただ、NextCloud が MySQL を立ち上げてるっぽく競合してしまったので、仕方なく諦めた。DB を共存させたりポート変えたりとかの回避手段はあるものの、そこまでしたいわけでもないので諦めた。(try はした) dokuwiki導入 なんと dokuwiki は DB を立ち上げる必要がないので、いけそう！と思って入れた。 公式: https://www.dokuwiki.org/install:debian なんとか入ってくれたのでよかった。ただ普通に記法に慣れない w 最近のドキュメント書くツールは便利なんだなあというのを改めて感じる。 メールを送る(TODO) dokouwiki のユーザー登録にメール送信が必要なのだが、いつまで経ってもメールが来なかった。ログを見ると sendmail が入ってないよって言われたから入れてみるも挙動変わらず。 どうやらメールサーバの設定とか Gmail のアプリパスワード？的な色々準備が必要そうなので、宿題。 viのモードを治す 参考にしたもの: https://yaru-yaru.net/reizo/raspberrypi%E3%81%AEvi%E3%81%A7%E6%96%B9%E5%90%91%E3%82%AD%E3%83%BC%E3%82%92%E6%8A%BC%E3%81%99%E3%81%A8abcd%E3%81%8C%E5%87%BA%E3%82%8B%E5%95%8F%E9%A1%8C/ vi 互換モードというのになっていたらしい。 最初ユーザーのホームディレクトリにのみ .vimrc 書いてたら、sudo vi した時に現象が解決しなくて焦った。仕方なく root の方にも書いてあげたら治った。こういう細かい課題を解決できるようになったのは進歩を感じるね。 構成図を書いた ちゃんと覚えてるうちにポートとかパスをメモっておいた。 幸運だったこと 一人暮らしを始めていた これによりルーターの全権を握れているのが大きい。また、契約時にメールサーバももらっていたのでその辺の検証もしやすい。自分の城があるって大事だよね。 仕事で触ってた 困ったら公式ドキュメントを見る。落ち着いてエラーログを確認する。みたいな一連の所作は仕事で息をするように身につけていた(そうしないと仕事にならない)ので、万策尽きた！みたいになることが少なくてよかった。 大学の時の数年前の自分は調べる力が弱かったのでこういう時に解決できず諦めるしかなかった。 反省 調査ログを途中から取り始めた 最初はまあすぐ終わるやろ、と思いながらやっていた。trello のコメントにフロー情報的に残していた。 そうだとしても調査ログは残すべきだった。コマンドとやったことを書いておくだけで後から見直した時に価値が出る。結局 notion にストック情報としてまとめなおした。 TODO 個人開発にすぎないので気が向いたらやること一覧 外部公開と HTTPS メールを送る 温度、湿度、二酸化炭素濃度などのモニタリング","title":"ラズパイを買って自宅サーバ入門した話"},{"link":"/blog/posts/2023/1211/","text":"読書メモのフォーマット所感\t近況 M2 mac を買って快適になった。普段は Windows からやってるけど仕事でも mac だしやっぱりスイッチングコストがないのは嬉しいね。\n純粋な技術系以外のことの書いてもいいかなという気持ちになったので今日は技術書読む時に自分が使ってるメモのフォーマットとその所感を書いていく。\t近況 M2 mac を買って快適になった。普段は Windows からやってるけど仕事でも mac だしやっぱりスイッチングコストがないのは嬉しいね。 純粋な技術系以外のことの書いてもいいかなという気持ちになったので今日は技術書読む時に自分が使ってるメモのフォーマットとその所感を書いていく。 項目 以下の 3 項目について、表形式もしくは見出しをつけて書いていく。 日付、次どこからか 読んだ日付と、次どのページから読むかを書く。 その日読んだページは前の記録との差から直ちに求められる。 メモ、感想 書いていてメモりたくなったもの、思ったことは全部ここに書いていく 覚えておきたいもの 1 回書いて整理したいもの それで派生して思ったこと 疑問 読んでいて疑問に思ったこと、調べたことを書いていく 疑問は基本解決しなくて良い、気になったら調べるくらいで なんでかというと大体少し先のページに書いてあったりするから 未来の自分への伝言のつもりで書いておく あと疑問を持って読むとそうじゃないときよりは記憶に残りやすい なくてもいい 具体例 ゼロからの OS 自作入門で書いた時のやつ # 8/23 ### 次どこからか P35 WSLでQEMU使う準備から ### メモ - 最初はlinuxも1万行だった - OSの特徴 - アプリケーションのインターフェース - 計算資源分配者 - 人間に対するインターフェース - https://zero.osdev.jp/ - とりあえず開発環境のインストールに沿ってWSLに入れてみた https://github.com/uchan-nos/mikanos-build - 一通りは成功した - 付録AのXサーバ入れるやつはやってない ### 疑問 所感 最初はいろいろ頑張って書いたり分けたりしてたけど、結局この 3 項目に落ち着いた 結局後で見返さないことも多い。整理するようなものじゃないので書きやすさを優先する ただ、「どこかでこれメモったぞ！」というときに辿れるように最低限分けておく 読書は量ではなく時間で区切る 習慣の力のほうが大きいし楽、「慣性力」を利用する モチベが溢れてる時(他にはあとちょっとで終わる時とか)、興味がある章の時は自然に読む量が多くなる それが自分の興味、一番持って帰る価値のあるところになる","title":"読書メモのフォーマット所感"},{"link":"/blog/posts/2023/1015/","text":"表示の都合でデータを別で作ってはいけない\t背景 自分なりの TodoList の亜種みたいなアプリを作っている データの持たせ方で悩んでいた\t背景 自分なりの TodoList の亜種みたいなアプリを作っている データの持たせ方で悩んでいた 目的(課題) todoの一覧データをどう子コンポーネントに受け渡すか、および更新するか？ 結論 親コンポーネントから子コンポーネントに受け渡すデータは todos のみ filteredTodo は表示の都合で生まれただけのもの それは vue では算出プロパティに書くことで生成するのがセオリー 参考：https://ja.vuejs.org/guide/essentials/computed.html やっていた間違い 表示用の filteredTodo というデータを別に作ろうとしていた これは表示の都合なだけなのでそもそも必要ない","title":"表示の都合でデータを別で作ってはいけない"},{"link":"/blog/posts/2023/0725/","text":"loupedeckとWindowsのURIスキーム\tやったこと 所感 学び やったこと loupedeck を買った 一番小さいやつ きっかけは趣味の DTM の生産性 UP でいろんなとこで聞くようになっていて気になっていた ガシェット系 youtuber を見漁ってこれに決めた Loupedeck Live S\tやったこと 所感 学び やったこと loupedeck を買った 一番小さいやつ きっかけは趣味の DTM の生産性 UP でいろんなとこで聞くようになっていて気になっていた ガシェット系 youtuber を見漁ってこれに決めた Loupedeck Live S loupedeck のソフトウェアをいろいろセットアップした ボタン 1 つでいろいろ呼び出せるように このブログに CSS を追加する方法を学んだ アフィリンクも登録しようとしたけど、クローキングとかをしなきゃいけないっぽいのでいったん放置 興味はある 所感 まだ三日くらいしか使ってないがとてもいい 一個設定すると一個便利になるのでハマってしまう 生産性に直結する logicool options とかも使ってなかったけどやってみようかなという気持ちになった 今のところの設定画面 学び windows の URI スキームというものを学んだ きっかけ Loupedeck Live SでサラリーマンがPC作業を効率化し、更なる改善のためにプラグインを自作した話：Windows版 ドキュメント URI に応じた既定のアプリの起動 これを知るまでアプリ一覧からもなんか出てこないし、管理者権限が必要なディレクトリのアプリってどうやって起動するんだ～～と永遠に調べていた 気づきは microsoft store からのアプリであることに気づいたこと そのあたりのワードでググったら出てきた ananke に CSS が効かなくて困った どうやら themes/ananke 以下の assets やら layouts やらをいじらなければいけなかったっぽい こういうのあるからCSS嫌い static 以下に置けば images で参照できるよ！的なやつもこれが原因かと思ったけど違ったっぽい 日付ごとにフォルダ作って images 作らないといけないのめんどい～～ 本当はこの辺もデフォルトのテーマ入れてるだけだから、どっかで選んでいい感じにしたい だけど対応してるものとか、いろんなものに耐えてる信頼と実績を考えるとこのままでもいい気もしている 詳しくないものはデフォルトに倣う","title":"loupedeckとWindowsのURIスキーム"},{"link":"/blog/posts/2023/0719/","text":"phpで掲示板作る\tやったこと php で掲示板を作る〜を chatGPT と対話しながらやってみた https://github.com/velengel/keijiban デプロイとかはしてない 静的サイトではないので Github Pages からやるにはバックエンド用意したり少々面倒\tやったこと php で掲示板を作る〜を chatGPT と対話しながらやってみた https://github.com/velengel/keijiban デプロイとかはしてない 静的サイトではないので Github Pages からやるにはバックエンド用意したり少々面倒 感想 こんなにさくっと 2 時間くらいで作れるの楽し〜〜〜 ハードル高いなと思ってたけど、それぞれの問題解決の問題解決・切り分け能力は業務で培われていたのでそこまで苦労しなかった 1 回 DB に繋がらなくてふて寝したが chatGPT が言ってることを丁寧に 1 つずつ試す(抽象的に聞く→具体的なコードで教えてのコンボが強すぎる)能力あればという条件付きではある それぞれのファイルが何やってるかは精読してないので、今度じっくり読みたい 機密情報はまあデフォルトから変えてないけどノリで環境変数を使って隠した 苦労したこと docker化 db が無限に繋がらなくて苦労した 原因はいくつかあった 接続先 DB の host 名はローカル直で動かしてた時は localhost でよかったけど、コンテナから繋ぐ時はサービス名(今回の場合 db)にしないといけなかった キャッシュが残っていたっぽく、docker-compose down --volumes で消してあげないといけなかった いろいろ必要だったもの php.ini apache.conf pdo_mysql .htaccess この辺を調査するためのプログラムとかから調べないといけないのが一苦労ポイントだった それぞれのファイルの意味は自分への宿題","title":"phpで掲示板作る"},{"link":"/blog/posts/2023/0717/","text":"ブログ改修工事\t先週有給 3 日も使ってしまい週に必要な課題解決成分が足りてなかったので、リハビリも兼ねて趣味プロをした。\nこの土日月でやったこと GitHub Pages のカスタムドメインとして velengel.com を設定 このブログのデプロイ リンク集の作成 todo-test をデプロイ\t先週有給 3 日も使ってしまい週に必要な課題解決成分が足りてなかったので、リハビリも兼ねて趣味プロをした。 この土日月でやったこと GitHub Pages のカスタムドメインとして velengel.com を設定 このブログのデプロイ リンク集の作成 todo-test をデプロイ カスタムドメインとして velengel.com を設定 前に実は設定していたが、free プランだと private repository で GitHub Pages 使えない(設定を解除すると課金が必要になる)ということで、仕方なく再設定した しようとして、いろいろ苦労した このドメインを他のブログサービスに使おうとしてこの辺を一旦解除したが、結局何故か使えずこっちのリンクも死ぬみたいな最悪な状況になった 研究の成果物リンクとかが切れてた https://tomokohashida.tumblr.com/post/642174236673310720 このへん ドメイン自体はお金を払ってるので勿体無いみたいな気持ちもあった 苦労したところ 既存のレコードが中途半端に残っている A レコードと CNAME レコード ネームサーバ系も 一旦全部消して対応 ドメインの検証が必要 検索して出てきた 反映に数分かかる 地味なイライラポイント 楽だったところ chatGPT がおおよその方針を示してくれる 修正は必要だが、おおよそイメージがつくので終わりがわかっているという精神的楽さがあった 業務経験が生きた Route 53 でやったことあるやつをお名前コムでやるだけといえばやるだけ それが UI 的にわかりにくくて大変なんだけど…… このブログのデプロイ 自分でブログやってます！みたいなの、憧れていた エンジニアとしてアウトプットする場がなかったのもある はてブロはどっちかというと趣味とかサークルに近い内容を書くところなので でもなかなか良いフレームワークを探したり知る能力がなかったのでできてなかった これも chatGPT とか色々で解決した 苦労したところ hugo のやってみた記事が公開してるテンプレートみたいなのをクローンして楽しようとしたらなんかデプロイできず、結局公式ドキュメントを一からやることでなんとかした 原典をあたるのが結局近道 何を使ってどうデプロイするか いろいろ選択肢は出てくるが、別に今回の要件は自分でサーバ立てていろいろやりたいみたいなわけではない(勉強でもないのにお金をかけたくないし)ので、そこの選定に一番コスト使った気がする 他の選択肢：gatsby とか 楽だったところ hugo でビルドできんの控えめに言ってすごすぎる、いつの間にこんな時代になってたんだ chatGPT バンザイ リンク集の作成 https://www.velengel.com/ 今までの成果物のリンクをまとめる場所が欲しかった ほんとは経歴とかも書いて自己紹介要素を足したい lit.link の劣化版みたいな感じになってる 苦労したところ GitHub Pages の仕様に合わせて、 docs 以下に書き出す必要があった 毎回 HelloWorld.vue を消してなんとかしなきゃいけないの地味にめんどい、テンプレートから作る弊害 楽だったところ chatGPT に「カードっぽく表示したい」みたいなことを言えば概ねそうしてくれる。微修正は必要だが 作りたいものに最短でいけるようになった todo-testをデプロイ https://www.velengel.com/todo-test/ Vue3 のキャッチアップを兼ねて(Composition API とか TypeScript とか)趣味で作ってたもの 一応動くところまではいってるので、デプロイしておこうかなみたいな感じ","title":"ブログ改修工事"},{"link":"/blog/posts/my-first-post/","text":"はじまり\tいろいろ苦労して何とかできたポスト\n./hugo new posts/my-first-post.md\tいろいろ苦労して何とかできたポスト ./hugo new posts/my-first-post.md","title":"はじまり"}]