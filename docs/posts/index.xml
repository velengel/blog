<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Vel Labs(ベル研究所)</title>
    <link>https://www.velengel.com/blog/posts/</link>
    <description>Recent content in Posts on Vel Labs(ベル研究所)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 04 Jan 2024 09:53:32 +0900</lastBuildDate>
    <atom:link href="https://www.velengel.com/blog/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ラズパイを買って自宅サーバ入門した話</title>
      <link>https://www.velengel.com/blog/posts/2024/0104/</link>
      <pubDate>Thu, 04 Jan 2024 09:53:32 +0900</pubDate>
      <guid>https://www.velengel.com/blog/posts/2024/0104/</guid>
      <description>背景 年末年始で暇だったので、ラズパイを買ってファイルサーバでも作ってみるか、と思って作り始めた。諸々で2日ほどかかった。 https://www.amazon.co.jp/gp/product/B081YD3VL5/ref=ppx_yo_dt_b_asin_title_o02_s00?ie=UTF8&amp;amp;psc=1&#xA;ちょうどたまたま家に使わなくなった以下のものがあったので、それを有効活用したいみたいな気持ちもあった。&#xA;200GBのmicroSD 元switchのSDカード ゲームが入らなくなってきたので512GBを買ったのでこれが退役した 2TBのHDD(Gdrive) https://www.amazon.co.jp/G-Technology-0G10339-HGST-G-Drive-Mobile/dp/B07F8NG48L?th=1 元々は前の前のmacのバックアップ用途で買った SSDが256GBだったのでバックアップから復活させると簡単に容量を食い潰してしまうため、結局使わなかった あとはicloudの容量が200GBを超えそうだったので、自宅にバックアップ取れるならこれ以上プランを上げなくてもいいかな、みたいな気持ちがあった。&#xA;やったこと OSのインストール 普通のRecommendedのやつを入れたらOMV6が入らない(対応してない)と言われ、OMV6を入れたらsshができなくなる、みたいな罠を踏んで4回くらい入れ直した。結局入れたのはLiteの方。&#xA;Debian12系に当たるので巷の記事が微妙に古くて参考にならないものばかりだった。流れだけ参考にして公式ドキュメントを見るという王道に戻って解決。&#xA;OMV6のインストール(回避) 参考にしたもの: https://koh-sen.jp/blog/archives/12238&#xA;OMV6を入れるところまではなんとか行ったものの、なんか動作が不安定で先に進めなくなったので回避。&#xA;別にファイルサーバが作れればいいのでOMV6にこだわる必要はなかった。&#xA;NextCloudのインストール 参考にしたもの: https://qiita.com/hiro2do/items/f8eed40acab713f20693&#xA;色々apt経由で入れられないか試行錯誤している中で、調査してたら見つけた。snapという便利パッケージ管理ツール的なのが出ていて、それを使ったら一瞬で入った。すごい。&#xA;公式: https://snapcraft.io/docs&#xA;外付けHDD有効化 ↑のブログ参考に、mount系のコマンドは別で調べてやったら入った。素晴らしいね。&#xA;df -hで自分の意図したものが出てきた時は軽く感動。普段仕事ではクラウド上のEC2とかしか触ってないから。物理サーバは実感が湧くのがいいね。&#xA;外部公開とHTTPS(TODO) ↑のブログに言われるままにtailscaleとか色々入れてたらどうも証明書関連でうまく行ってないっぽく全世界に公開しそう(一瞬した)になったので、一旦内部公開に止めることにした。別にそれでも要件は満たせるので。&#xA;NextCloudを写真のバックアップ先に設定 参考にしたもの: https://denor.jp/iphone%E3%81%A7%E6%92%AE%E5%BD%B1%E3%81%97%E3%81%9F%E5%86%99%E7%9C%9F%E3%82%84%E5%8B%95%E7%94%BB%E3%82%92nextcloud%E3%82%B5%E3%83%BC%E3%83%90%E3%81%B8%E8%87%AA%E5%8B%95%E3%82%A2%E3%83%83%E3%83%97&#xA;やるだけ。&#xA;ここまで1日目。この後監視入れてwikiサーバでも建ててみるかという気分になり、引き続きインストールをしていた。&#xA;mackerel導入 入れるのはやるだけ。カスタムメトリックのプラグインを導入するのが苦労した。やりたかったのはラズパイのCPU温度の監視。&#xA;公式: https://mackerel.io/ja/docs/entry/advanced/custom-metrics&#xA;最終的に書いたもの&#xA;[plugin.metrics.temp] command = [&amp;#34;bash&amp;#34;, &amp;#34;/home/xxx/temp.sh&amp;#34;] 最初はcommand=&amp;quot;/home/xxx/temp.sh&amp;quot;と書いていた。これでも動いていてくれて良くない？と思ったがなぜかメトリクスが送られなかったので書き方を変えた。&#xA;ちゃんとdiscordにも通知するようにした✌️ mediawiki導入(回避) 公式: https://www.mediawiki.org/wiki/Manual:Running_MediaWiki_on_Debian_or_Ubuntu/ja&#xA;これに沿って初回のセットアップページまでは進んだ。(そこにいくまでにapache2にmod-phpを入れてなくてただのphpファイルがそのまま表示されるみたいな罠を踏んだ。一回休み。)&#xA;ただ、NextCloudがMySQLを立ち上げてるっぽく競合してしまったので、仕方なく諦めた。DBを共存させたりポート変えたりとかの回避手段はあるものの、そこまでしたいわけでもないので諦めた。(tryはした)&#xA;dokuwiki導入 なんとdokuwikiはDBを立ち上げる必要がないので、いけそう！と思って入れた。&#xA;公式: https://www.dokuwiki.org/install:debian&#xA;なんとか入ってくれたのでよかった。ただ普通に記法に慣れないw&#xA;最近のドキュメント書くツールは便利なんだなあというのを改めて感じる。&#xA;メールを送る(TODO) dokouwikiのユーザー登録にメール送信が必要なのだが、いつまで経ってもメールが来なかった。ログを見るとsendmailが入ってないよって言われたから入れてみるも挙動変わらず。 どうやらメールサーバの設定とかGmailのアプリパスワード？的な色々準備が必要そうなので、宿題。&#xA;viのモードを治す 参考にしたもの: https://yaru-yaru.net/reizo/raspberrypi%E3%81%AEvi%E3%81%A7%E6%96%B9%E5%90%91%E3%82%AD%E3%83%BC%E3%82%92%E6%8A%BC%E3%81%99%E3%81%A8abcd%E3%81%8C%E5%87%BA%E3%82%8B%E5%95%8F%E9%A1%8C/&#xA;vi互換モードというのになっていたらしい。 最初ユーザーのホームディレクトリにのみ.vimrc書いてたら、sudo viした時に現象が解決しなくて焦った。仕方なくrootの方にも書いてあげたら治った。こういう細かい課題を解決できるようになったのは進歩を感じるね。</description>
    </item>
    <item>
      <title>読書メモのフォーマット所感</title>
      <link>https://www.velengel.com/blog/posts/2023/1211/</link>
      <pubDate>Mon, 11 Dec 2023 21:04:36 +0900</pubDate>
      <guid>https://www.velengel.com/blog/posts/2023/1211/</guid>
      <description>近況 M2 macを買って快適になった。普段はWindowsからやってるけど仕事でもmacだしやっぱりスイッチングコストがないのは嬉しいね。&#xA;純粋な技術系以外のことの書いてもいいかなという気持ちになったので今日は技術書読む時に自分が使ってるメモのフォーマットとその所感を書いていく。&#xA;項目 以下の3項目について、表形式もしくは見出しをつけて書いていく。&#xA;日付、次どこからか 読んだ日付と、次どのページから読むかを書く。&#xA;その日読んだページは前の記録との差から直ちに求められる。&#xA;メモ、感想 書いていてメモりたくなったもの、思ったことは全部ここに書いていく&#xA;覚えておきたいもの 一回書いて整理したいもの それで派生して思ったこと 疑問 読んでいて疑問に思ったこと、調べたことを書いていく&#xA;疑問は基本解決しなくて良い、気になったら調べるくらいで なんでかというと大体少し先のページに書いてあったりするから 未来の自分への伝言のつもりで書いておく あと疑問を持って読むとそうじゃないときよりは記憶に残りやすい なくてもいい 具体例 ゼロからのOS自作入門で書いた時のやつ&#xA;# 8/23 ### 次どこからか P35 WSLでQEMU使う準備から ### メモ - 最初はlinuxも1万行だった - OSの特徴 - アプリケーションのインターフェース - 計算資源分配者 - 人間に対するインターフェース - https://zero.osdev.jp/ - とりあえず開発環境のインストールに沿ってWSLに入れてみた https://github.com/uchan-nos/mikanos-build - 一通りは成功した - 付録AのXサーバ入れるやつはやってない ### 疑問 所感 最初はいろいろ頑張って書いたり分けたりしてたけど、結局この3項目に落ち着いた 結局後で見返さないことも多い。整理するようなものじゃないので書きやすさを優先する ただ、「どこかでこれメモったぞ！」というときに辿れるように最低限分けておく 読書は量ではなく時間で区切る 習慣の力のほうが大きいし楽、「慣性力」を利用する モチベが溢れてる時(他にはあとちょっとで終わる時とか)、興味がある章の時は自然に読む量が多くなる それが自分の興味、一番持って帰る価値のあるところになる </description>
    </item>
    <item>
      <title>20231015</title>
      <link>https://www.velengel.com/blog/posts/2023/1015/</link>
      <pubDate>Sun, 15 Oct 2023 13:57:31 +0900</pubDate>
      <guid>https://www.velengel.com/blog/posts/2023/1015/</guid>
      <description>表示の都合でデータを別で作ってはいけない 背景 自分なりのTodoListの亜種みたいなアプリを作っている データの持たせ方で悩んでいた 目的(課題) todoの一覧データをどう子コンポーネントに受け渡すか、および更新するか？ 結論 親コンポーネントから子コンポーネントに受け渡すデータはtodosのみ filteredTodoは表示の都合で生まれただけのもの それはvueでは算出プロパティに書くことで生成するのがセオリー 参考：https://ja.vuejs.org/guide/essentials/computed.html やっていた間違い 表示用のfilteredTodoというデータを別に作ろうとしていた これは表示の都合なだけなのでそもそも必要ない </description>
    </item>
    <item>
      <title>20230725</title>
      <link>https://www.velengel.com/blog/posts/2023/0725/</link>
      <pubDate>Tue, 25 Jul 2023 20:15:11 +0900</pubDate>
      <guid>https://www.velengel.com/blog/posts/2023/0725/</guid>
      <description> やったこと 所感 学び やったこと loupedeckを買った 一番小さいやつ きっかけは趣味のDTMの生産性UPでいろんなとこで聞くようになっていて気になっていた ガシェット系youtuberを見漁ってこれに決めた Loupedeck Live S loupedeckのソフトウェアをいろいろセットアップした ボタン一つでいろいろ呼び出せるように このブログにCSSを追加する方法を学んだ アフィリンクも登録しようとしたけど、クローキングとかをしなきゃいけないっぽいのでいったん放置 興味はある 所感 まだ三日くらいしか使ってないがとてもいい 一個設定すると一個便利になるのでハマってしまう 生産性に直結する logicool optionsとかも使ってなかったけどやってみようかなという気持ちになった 今のところの設定画面 学び windowsのURIスキームというものを学んだ&#xA;きっかけ Loupedeck Live SでサラリーマンがPC作業を効率化し、更なる改善のためにプラグインを自作した話：Windows版 ドキュメント URI に応じた既定のアプリの起動 これを知るまでアプリ一覧からもなんか出てこないし、管理者権限必要なディレクトリのアプリってどうやって起動するんだ～～と永遠に調べていた&#xA;気づきはmicrosoft storeからのアプリであることに気づいたこと そのあたりのワードでググったら出てきた anankeにCSSが効かなくて困った&#xA;どうやらthemes/ananke以下のassetsやらlayoutsやらをいじらなければいけなかったっぽい こういうのあるからCSS嫌い static以下に置けばimagesで参照できるよ！的なやつもこれが原因かと思ったけど違ったっぽい 日付ごとにフォルダ作ってimages作らないといけないのめんどい～～ 本当はこの辺もデフォルトのテーマ入れてるだけだから、どっかで選んでいい感じにしたい だけど対応してるものとか、いろんなものに耐えてる信頼と実績を考えるとこのままでもいい気もしている 詳しくないものはデフォルトに倣う </description>
    </item>
    <item>
      <title>20230719</title>
      <link>https://www.velengel.com/blog/posts/2023/0719/</link>
      <pubDate>Wed, 19 Jul 2023 22:23:52 +0900</pubDate>
      <guid>https://www.velengel.com/blog/posts/2023/0719/</guid>
      <description>やったこと phpで掲示板を作る〜をchatGPTと対話しながらやってみた https://github.com/velengel/keijiban デプロイとかはしてない 静的サイトではないのでGithub Pagesからやるにはバックエンド用意したり少々面倒 感想 こんなにさくっと2時間くらいで作れるの楽し〜〜〜 ハードル高いなと思ってたけど、それぞれの問題解決の問題解決・切り分け能力は業務で培われていたのでそこまで苦労しなかった 一回DBに繋がらなくてふて寝したが chatGPTが言ってることを丁寧に一つずつ試す(抽象的に聞く→具体的なコードで教えてのコンボが強すぎる)能力があればという条件付きではある それぞれのファイルが何やってるかは精読してないので、今度じっくり読みたい 機密情報はまあデフォルトから変えてないけどノリで環境変数を使って隠した 苦労したこと docker化 dbに無限に繋がらなくて苦労した 原因はいくつかあった 接続先DBのhost名はローカルで直で動かしてた時はlocalhostでよかったけど、コンテナから繋ぐ時はサービス名(今回の場合db)にしないといけなかった キャッシュが残っていたっぽく、docker-compose down --volumesで消してあげないといけなかった いろいろ必要だったもの php.ini apache.conf pdo_mysql .htaccess この辺を調査するためのプログラムとかから調べないといけないのが一苦労ポイントだった それぞれのファイルの意味は自分への宿題 </description>
    </item>
    <item>
      <title>20230717</title>
      <link>https://www.velengel.com/blog/posts/2023/0717/</link>
      <pubDate>Mon, 17 Jul 2023 21:38:31 +0900</pubDate>
      <guid>https://www.velengel.com/blog/posts/2023/0717/</guid>
      <description>先週有給3日も使ってしまい週に必要な課題解決成分が足りてなかったので、リハビリも兼ねて趣味プロをした。&#xA;この土日月でやったこと GitHub Pagesのカスタムドメインとしてvelengel.comを設定 このブログのデプロイ リンク集の作成 todo-testをデプロイ カスタムドメインとしてvelengel.comを設定 前に実は設定していたが、freeプランだとprivate repositoryでGitHub Pages使えない(設定を解除すると課金が必要になる)ということで、仕方なく再設定した しようとして、いろいろ苦労した このドメインを他のブログサービスに使おうとしてこの辺を一旦解除したが、結局何故か使えずこっちのリンクも死ぬみたいな最悪な状況になった 研究の成果物リンクとかが切れてた https://tomokohashida.tumblr.com/post/642174236673310720 このへん ドメイン自体はお金を払ってるので勿体無いみたいな気持ちもあった 苦労したところ 既存のレコードが中途半端に残っている AレコードとCNAMEレコード ネームサーバー系も 一旦全部消して対応 ドメインの検証が必要 検索して出てきた 反映に数分かかる 地味なイライラポイント 楽だったところ chatGPTがおおよその方針を示してくれる 修正は必要だが、おおよそイメージがつくので終わりがわかっているという精神的楽さがあった 業務経験が生きた Route 53でやったことあるやつをお名前コムでやるだけといえばやるだけ それがUI的にわかりにくくて大変なんだけど&amp;hellip;&amp;hellip; このブログのデプロイ 自分でブログやってます！みたいなの、憧れていた エンジニアとしてアウトプットする場がなかったのもある はてブロはどっちかというと趣味とかサークルに近い内容を書くところなので でもなかなか良いフレームワークを探したり知る能力がなかったのでできてなかった これもchatGPTとか色々で解決した 苦労したところ hugoのやってみた記事が公開してるテンプレートみたいなのをクローンして楽しようとしたらなんかデプロイできず、結局公式ドキュメントを一からやることでなんとかした 原典をあたるのが結局近道 何を使ってどうデプロイするか いろいろ選択肢は出てくるが、別に今回の要件は自分でサーバー立てていろいろやりたいみたいなわけではない(勉強でもないのにお金をかけたくないし)ので、そこの選定に一番コスト使った気がする 他の選択肢：gatsbyとか 楽だったところ hugoでビルドできんの控えめに言ってすごすぎる、いつの間にこんな時代になってたんだ chatGPTバンザイ リンク集の作成 https://www.velengel.com/ 今までの成果物のリンクをまとめる場所が欲しかった ほんとは経歴とかも書いて自己紹介要素を足したい lit.linkの劣化版みたいな感じになってる 苦労したところ GitHub Pagesの仕様に合わせてdocs以下に書き出すようにする必要があった 毎回HelloWorld.vueを消してなんとかしなきゃいけないの地味にめんどい、テンプレートから作る弊害 楽だったところ chatGPTに「カードっぽく表示したい」みたいなことを言えば概ねそうしてくれる。微修正は必要だが 作りたいものに最短でいけるようになった todo-testをデプロイ https://www.velengel.com/todo-test/ Vue3のキャッチアップを兼ねて(Composition APIとかTypeScriptとか)趣味で作ってたもの 一応動くところまではいってるので、デプロイしておこうかなみたいな感じ </description>
    </item>
    <item>
      <title>はじまり</title>
      <link>https://www.velengel.com/blog/posts/my-first-post/</link>
      <pubDate>Mon, 17 Jul 2023 14:07:54 +0900</pubDate>
      <guid>https://www.velengel.com/blog/posts/my-first-post/</guid>
      <description>いろいろ苦労して何とかできたポスト&#xA;./hugo new posts/my-first-post.md </description>
    </item>
  </channel>
</rss>
